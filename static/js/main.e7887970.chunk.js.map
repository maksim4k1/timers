{"version":3,"sources":["redux/types.js","components/Timer.jsx","redux/actions/timerActions.js","components/ListTimers.jsx","components/NewTimer.jsx","App.js","redux/reducers/timerReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["ADD_TIMER","TOGGLE_TIMER","UPDATE_TIMER","RESET_TIMER","DELETE_TIMER","TimerElement","styled","li","Name","h5","Button","button","dispatchToProps","toggleTimer","id","value","type","payload","updateTimer","resetTimer","deleteTimer","connect","timer","useEffect","isStarted","interval","setInterval","clearInterval","name","Math","floor","time","onClick","List","ul","state","timers","map","item","Content","div","Title","h3","Input","input","add","useState","setName","onSubmit","e","preventDefault","onChange","target","h1","App","className","Timer","this","nanoid","timerReducer","newTimer","length","newState","undefined","filter","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7887970.chunk.js","sourcesContent":["export const ADD_TIMER = \"ADD_TIMER\";\r\nexport const TOGGLE_TIMER = \"TOGGLE_TIMER\";\r\nexport const SELECT_TIMER = \"SELECT_TIMER\";\r\nexport const UPDATE_TIMER = \"UPDATE_TIMER\";\r\nexport const RESET_TIMER = \"RESET_TIMER\";\r\nexport const DELETE_TIMER = \"DELETE_TIMER\";","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { deleteTimerAction, resetTimerAction, toggleTimerAction, updateTimerAction } from \"../redux/actions/timerActions\";\r\n\r\nconst TimerElement = styled.li`\r\n  padding: 10px 15px;\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n  gap: 5px;\r\n  border: 2px solid #d6d6d6;\r\n  background: #f1f1f1;\r\n`;\r\nconst Name = styled.h5`\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n`;\r\nconst Button = styled.button`\r\n  padding: 3px 10px;\r\n  border: 2px solid #d6d6d6;\r\n  background: #ffffff;\r\n  @media screen and (max-width: 520px){\r\n    &{\r\n      font-size: 14px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Timer ({timer, toggleTimer, updateTimer, resetTimer, deleteTimer}) {\r\n  useEffect(() => {\r\n    if(timer.isStarted){\r\n      const interval = setInterval(() => {\r\n        updateTimer(timer.id);\r\n        clearInterval(interval);\r\n      }, 50);\r\n    }\r\n  }, [timer, updateTimer]);\r\n\r\n  const resetTime = () => {\r\n    toggleTimer(timer.id, false);\r\n    resetTimer(timer.id);\r\n  }\r\n\r\n  return(\r\n    <TimerElement>\r\n      <Name>{timer.name}</Name>\r\n      <div>{Math.floor(timer.time * 10) / 10}s</div>\r\n      <div>\r\n        <Button onClick={() => toggleTimer(timer.id)}>{timer.isStarted ? \"Пауза\" : \"Старт\"}</Button>\r\n      </div>\r\n      <div>\r\n        <Button onClick={resetTime}>Очистить</Button>\r\n        <Button onClick={() => deleteTimer(timer.id)}>Удалить</Button>\r\n      </div>\r\n    </TimerElement>\r\n  );\r\n}\r\n\r\nconst dispatchToProps = {\r\n  toggleTimer: toggleTimerAction,\r\n  updateTimer: updateTimerAction,\r\n  resetTimer: resetTimerAction,\r\n  deleteTimer: deleteTimerAction\r\n}\r\n\r\nexport default connect(null, dispatchToProps)(Timer);","import { ADD_TIMER, TOGGLE_TIMER, SELECT_TIMER, UPDATE_TIMER, DELETE_TIMER, RESET_TIMER } from \"../types\";\r\n\r\nexport function addTimerAction(name){\r\n  return {type: ADD_TIMER, payload: name};\r\n}\r\nexport function toggleTimerAction(id, value){\r\n  return {type: TOGGLE_TIMER, payload: {id, value}};\r\n}\r\nexport function selectTimerAction(id){\r\n  return {type: SELECT_TIMER, payload: id};\r\n}\r\nexport function updateTimerAction(id){\r\n  return {type: UPDATE_TIMER, payload: id};\r\n}\r\nexport function resetTimerAction(id){\r\n  return {type: RESET_TIMER, payload: id};\r\n}\r\nexport function deleteTimerAction(id){\r\n  return {type: DELETE_TIMER, payload: id};\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport Timer from \"./Timer\";\r\n\r\nconst List = styled.ul`\r\n  margin: 40px 0 0;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-gap: 20px;\r\n  @media screen and (max-width: 800px){\r\n    &{\r\n      margin: 30px 0 0;\r\n      grid-template-columns: 1fr 1fr;\r\n    }\r\n  }\r\n  @media screen and (max-width: 480px){\r\n    &{\r\n      grid-template-columns: 1fr;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction ListTimers ({timers}) {\r\n  return(\r\n    <List>\r\n      {\r\n        timers.map(item => {\r\n          return <Timer key={item.id} timer={item}/>\r\n        })\r\n      }\r\n    </List>\r\n  );\r\n}\r\n\r\nconst stateToProps = (state) => ({\r\n  timers: state.timers\r\n});\r\n\r\nexport default connect(stateToProps)(ListTimers);","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { addTimerAction } from \"../redux/actions/timerActions\";\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  align-items: center;\r\n`;\r\nconst Title = styled.h3`\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  @media screen and (max-width: 500px){\r\n    &{\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  padding: 5px 8px;\r\n  border: 2px solid #d6d6d6;\r\n`;\r\nconst Button = styled.button`\r\n  padding: 5px 8px;\r\n  border: 2px solid #d6d6d6;\r\n  background: #f1f1f1;\r\n`;\r\n\r\nfunction NewTimer ({add}) {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  function addTimer(){\r\n    add(name);\r\n    setName(\"\");\r\n  }\r\n\r\n  return(\r\n    <Content>\r\n      <Title>Add new Timer</Title>\r\n      <form onSubmit={(e) => e.preventDefault()}>\r\n        <Input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n        <Button onClick={addTimer}>Add</Button>\r\n      </form>\r\n    </Content>\r\n  );\r\n}\r\n\r\nconst dispatchToProps = {\r\n  add: addTimerAction\r\n}\r\n\r\nexport default connect(null, dispatchToProps)(NewTimer);","import styled from 'styled-components';\nimport ListTimers from './components/ListTimers';\nimport NewTimer from './components/NewTimer';\nimport './styles/App.css';\n\nconst Title = styled.h1`\n  margin: 0 0 30px;\n  font-size: 48px;\n  font-weight: 700;\n  text-align: center;\n  @media screen and (max-width: 500px){\n    &{\n      font-size: 36px;\n    }\n  }\n`;\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <Title>Timers App</Title>\n      <NewTimer/>\n      <ListTimers/>\n    </div>\n  );\n}\n\nexport default App;\n","import { nanoid } from \"nanoid\";\r\nimport { ADD_TIMER, TOGGLE_TIMER, SELECT_TIMER, UPDATE_TIMER, DELETE_TIMER, RESET_TIMER } from \"../types\";\r\n\r\nclass Timer {\r\n  constructor(name){\r\n      this.id = nanoid();\r\n      this.name = name;\r\n      this.time = 0;\r\n      this.isStarted = false;\r\n  }\r\n}\r\n\r\nfunction timerReducer(state=[], {type, payload}){\r\n  switch(type){\r\n    case ADD_TIMER: {\r\n      const newTimer = payload ? payload : `Timer #${state.length}`;\r\n      return [...state, new Timer(newTimer)];\r\n    } case TOGGLE_TIMER: {\r\n      const newState = state.map((item) => {\r\n        if(item.id === payload.id){\r\n          return {...item, isStarted: payload.value !== undefined ? payload.value : !item.isStarted};\r\n        }\r\n        return item;\r\n      });\r\n      return newState;\r\n    } case SELECT_TIMER: {\r\n      return state;\r\n    } case UPDATE_TIMER: {\r\n      const newState = state.map((item) => {\r\n        if(item.id === payload){\r\n          return {...item, time: item.time + 0.05};\r\n        }\r\n        return item;\r\n      });\r\n      return newState;\r\n    } case RESET_TIMER: {\r\n      const newState = state.map((item) => {\r\n        if(item.id === payload){\r\n          return {...item, time: 0};\r\n        }\r\n        return item;\r\n      });\r\n      return newState;\r\n    } case DELETE_TIMER: {\r\n      const newState = state.filter(item => item.id !== payload);\r\n      return newState;\r\n    } default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport default timerReducer;","import { combineReducers } from \"redux\";\r\nimport timerReducer from \"./timerReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  timers: timerReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './redux/reducers/rootReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}